def getAdocBlocks(toTangle)
  adocBlocks = []

  for arg in toTangle
    if File.file?(arg)
      toTangle += [arg]
      next
    end

    filePath = arg
    if not filePath.include?(":")
      warn("arachne [WARNING]: could not find file \"" + arg + "\"")
      next
    else
      filePath = arg[/^.+(?=:)/]
    end

    if not File.file?(filePath)
      warn("arachne [WARNING]: could not find file \"" + filePath + "\" in argument \"" + arg + "\"")
      next
    end

    inpBlock = arg[/(?<=:).+$/]
    puts inpBlock

    # TODO - check if block is found in file
  end

  return adocBlocks
end

def downTangle(toTangle)
  adocBlocks = getAdocBlocks(toTangle)
  puts adocBlocks
end

command = "default"
toTangle = []
noConfirm = false
onlyFiles = false

for arg in ARGV.uniq()
  if arg == "--" and not onlyFiles
    onlyFiles = true
  elsif arg.length > 2 and arg[0..1] == "--" and not onlyFiles
    case arg
    when "--down"
      if command == "up"
        warn("arachne [ERROR]: flags --up and --down conflict")
        exit 1
      end
      command = "down"
    when "--up"
      if command == "down"
        warn("arachne [ERROR]: flags --up and --down conflict")
        exit 1
      end
      command = "up"
    when "--help"
      puts("Usage: arachne [OPTIONS]... [FILES / FILES:BLOCK]...")
      puts("A tool for writing literate programs using AsciiDoc.")

      puts("OPTIONS:")
      puts("    -d, --down                       downtangles a file")
      puts("                                     the default operation that will be run if no other command is supplied")
      puts("                                     will conflict with -u / --up")

      puts("    -u, --up                         uptangles a source file")
      puts("                                     will conflict with -d / --down")

      puts("    -h, --help                       prints out this help message")

      puts("    -y, --no-confirm                 automatically answers the default answer to prompts")
      exit 0
    when "--no-confirm"
      noConfirm = true
    end
  elsif arg.length > 1 and arg[0] == "-" and not onlyFiles
    for char in arg[1..].split("")
      case char
      when "d"
        if command == "up"
          warn "arachne [ERROR]: flags --up and --down conflict"
          exit 1
        end
        command = "down"
      when "u"
        if command == "down"
          warn "arachne [ERROR]: flags --up and --down conflict"
          exit 1
        end
        command = "up"
      when "h"
        puts("Usage: arachne [OPTIONS]... [FILES / FILES:BLOCK]...")
        puts("A tool for writing literate programs using AsciiDoc.")

        puts("OPTIONS:")
        puts("    -d, --down                       downtangles a file")
        puts("                                     the default operation that will be run if no other command is supplied")
        puts("                                     will conflict with -u / --up")

        puts("    -u, --up                         uptangles a source file")
        puts("                                     will conflict with -d / --down")

        puts("    -h, --help                       prints out this help message")

        puts("    -y, --no-confirm                 automatically answers the default answer to prompts")
        exit 0
      when "y"
        noConfirm = true
      end
    end
  else
    toTangle += [arg]
  end
end

if command == "up"
  puts "TODO"
  # upTangle(toTangle)
else
  downTangle(toTangle)
end